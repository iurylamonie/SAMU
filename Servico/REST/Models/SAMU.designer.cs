#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace REST.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="20131011110169")]
	public partial class SAMUDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAmbulancia(Ambulancia instance);
    partial void UpdateAmbulancia(Ambulancia instance);
    partial void DeleteAmbulancia(Ambulancia instance);
    partial void InsertVeiculoAtendimento(VeiculoAtendimento instance);
    partial void UpdateVeiculoAtendimento(VeiculoAtendimento instance);
    partial void DeleteVeiculoAtendimento(VeiculoAtendimento instance);
    partial void InsertHospital(Hospital instance);
    partial void UpdateHospital(Hospital instance);
    partial void DeleteHospital(Hospital instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertChamado(Chamado instance);
    partial void UpdateChamado(Chamado instance);
    partial void DeleteChamado(Chamado instance);
    partial void InsertOcorrencia(Ocorrencia instance);
    partial void UpdateOcorrencia(Ocorrencia instance);
    partial void DeleteOcorrencia(Ocorrencia instance);
    #endregion
		
		public SAMUDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["_20131011110169ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SAMUDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SAMUDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SAMUDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SAMUDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ambulancia> Ambulancias
		{
			get
			{
				return this.GetTable<Ambulancia>();
			}
		}
		
		public System.Data.Linq.Table<VeiculoAtendimento> VeiculoAtendimentos
		{
			get
			{
				return this.GetTable<VeiculoAtendimento>();
			}
		}
		
		public System.Data.Linq.Table<Hospital> Hospitals
		{
			get
			{
				return this.GetTable<Hospital>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Chamado> Chamados
		{
			get
			{
				return this.GetTable<Chamado>();
			}
		}
		
		public System.Data.Linq.Table<Ocorrencia> Ocorrencias
		{
			get
			{
				return this.GetTable<Ocorrencia>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ambulancia")]
	public partial class Ambulancia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _placa;
		
		private string _tipo;
		
		private EntitySet<VeiculoAtendimento> _VeiculoAtendimentos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnplacaChanging(string value);
    partial void OnplacaChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    #endregion
		
		public Ambulancia()
		{
			this._VeiculoAtendimentos = new EntitySet<VeiculoAtendimento>(new Action<VeiculoAtendimento>(this.attach_VeiculoAtendimentos), new Action<VeiculoAtendimento>(this.detach_VeiculoAtendimentos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_placa", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string placa
		{
			get
			{
				return this._placa;
			}
			set
			{
				if ((this._placa != value))
				{
					this.OnplacaChanging(value);
					this.SendPropertyChanging();
					this._placa = value;
					this.SendPropertyChanged("placa");
					this.OnplacaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ambulancia_VeiculoAtendimento", Storage="_VeiculoAtendimentos", ThisKey="id", OtherKey="Ambulancia_id")]
		internal EntitySet<VeiculoAtendimento> VeiculoAtendimentos
		{
			get
			{
				return this._VeiculoAtendimentos;
			}
			set
			{
				this._VeiculoAtendimentos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VeiculoAtendimentos(VeiculoAtendimento entity)
		{
			this.SendPropertyChanging();
			entity.Ambulancia = this;
		}
		
		private void detach_VeiculoAtendimentos(VeiculoAtendimento entity)
		{
			this.SendPropertyChanging();
			entity.Ambulancia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VeiculoAtendimento")]
	public partial class VeiculoAtendimento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _Ambulancia_id;
		
		private System.Nullable<int> _Usuario_id;
		
		private System.Nullable<bool> _atendimento;
		
		private string _localizacao;
		
		private System.Nullable<bool> _disponibilidade;
		
		private EntitySet<Chamado> _Chamados;
		
		private EntityRef<Ambulancia> _Ambulancia;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAmbulancia_idChanging(System.Nullable<int> value);
    partial void OnAmbulancia_idChanged();
    partial void OnUsuario_idChanging(System.Nullable<int> value);
    partial void OnUsuario_idChanged();
    partial void OnatendimentoChanging(System.Nullable<bool> value);
    partial void OnatendimentoChanged();
    partial void OnlocalizacaoChanging(string value);
    partial void OnlocalizacaoChanged();
    partial void OndisponibilidadeChanging(System.Nullable<bool> value);
    partial void OndisponibilidadeChanged();
    #endregion
		
		public VeiculoAtendimento()
		{
			this._Chamados = new EntitySet<Chamado>(new Action<Chamado>(this.attach_Chamados), new Action<Chamado>(this.detach_Chamados));
			this._Ambulancia = default(EntityRef<Ambulancia>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ambulancia_id", DbType="Int")]
		public System.Nullable<int> Ambulancia_id
		{
			get
			{
				return this._Ambulancia_id;
			}
			set
			{
				if ((this._Ambulancia_id != value))
				{
					if (this._Ambulancia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAmbulancia_idChanging(value);
					this.SendPropertyChanging();
					this._Ambulancia_id = value;
					this.SendPropertyChanged("Ambulancia_id");
					this.OnAmbulancia_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario_id", DbType="Int")]
		public System.Nullable<int> Usuario_id
		{
			get
			{
				return this._Usuario_id;
			}
			set
			{
				if ((this._Usuario_id != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuario_idChanging(value);
					this.SendPropertyChanging();
					this._Usuario_id = value;
					this.SendPropertyChanged("Usuario_id");
					this.OnUsuario_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_atendimento", DbType="Bit")]
		public System.Nullable<bool> atendimento
		{
			get
			{
				return this._atendimento;
			}
			set
			{
				if ((this._atendimento != value))
				{
					this.OnatendimentoChanging(value);
					this.SendPropertyChanging();
					this._atendimento = value;
					this.SendPropertyChanged("atendimento");
					this.OnatendimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_localizacao", DbType="VarChar(MAX)")]
		public string localizacao
		{
			get
			{
				return this._localizacao;
			}
			set
			{
				if ((this._localizacao != value))
				{
					this.OnlocalizacaoChanging(value);
					this.SendPropertyChanging();
					this._localizacao = value;
					this.SendPropertyChanged("localizacao");
					this.OnlocalizacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disponibilidade", DbType="Bit")]
		public System.Nullable<bool> disponibilidade
		{
			get
			{
				return this._disponibilidade;
			}
			set
			{
				if ((this._disponibilidade != value))
				{
					this.OndisponibilidadeChanging(value);
					this.SendPropertyChanging();
					this._disponibilidade = value;
					this.SendPropertyChanged("disponibilidade");
					this.OndisponibilidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeiculoAtendimento_Chamado", Storage="_Chamados", ThisKey="id", OtherKey="VeiculoAtendimento_id")]
		internal EntitySet<Chamado> Chamados
		{
			get
			{
				return this._Chamados;
			}
			set
			{
				this._Chamados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ambulancia_VeiculoAtendimento", Storage="_Ambulancia", ThisKey="Ambulancia_id", OtherKey="id", IsForeignKey=true)]
		internal Ambulancia Ambulancia
		{
			get
			{
				return this._Ambulancia.Entity;
			}
			set
			{
				Ambulancia previousValue = this._Ambulancia.Entity;
				if (((previousValue != value) 
							|| (this._Ambulancia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ambulancia.Entity = null;
						previousValue.VeiculoAtendimentos.Remove(this);
					}
					this._Ambulancia.Entity = value;
					if ((value != null))
					{
						value.VeiculoAtendimentos.Add(this);
						this._Ambulancia_id = value.id;
					}
					else
					{
						this._Ambulancia_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ambulancia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_VeiculoAtendimento", Storage="_Usuario", ThisKey="Usuario_id", OtherKey="id", IsForeignKey=true)]
		internal Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.VeiculoAtendimentos.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.VeiculoAtendimentos.Add(this);
						this._Usuario_id = value.id;
					}
					else
					{
						this._Usuario_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chamados(Chamado entity)
		{
			this.SendPropertyChanging();
			entity.VeiculoAtendimento = this;
		}
		
		private void detach_Chamados(Chamado entity)
		{
			this.SendPropertyChanging();
			entity.VeiculoAtendimento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hospital")]
	public partial class Hospital : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _endereco;
		
		private string _tipo;
		
		private EntitySet<Chamado> _Chamados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnenderecoChanging(string value);
    partial void OnenderecoChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    #endregion
		
		public Hospital()
		{
			this._Chamados = new EntitySet<Chamado>(new Action<Chamado>(this.attach_Chamados), new Action<Chamado>(this.detach_Chamados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endereco", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string endereco
		{
			get
			{
				return this._endereco;
			}
			set
			{
				if ((this._endereco != value))
				{
					this.OnenderecoChanging(value);
					this.SendPropertyChanging();
					this._endereco = value;
					this.SendPropertyChanged("endereco");
					this.OnenderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(MAX)")]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hospital_Chamado", Storage="_Chamados", ThisKey="id", OtherKey="Hospital_id")]
		internal EntitySet<Chamado> Chamados
		{
			get
			{
				return this._Chamados;
			}
			set
			{
				this._Chamados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chamados(Chamado entity)
		{
			this.SendPropertyChanging();
			entity.Hospital = this;
		}
		
		private void detach_Chamados(Chamado entity)
		{
			this.SendPropertyChanging();
			entity.Hospital = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _cpf;
		
		private string _senha;
		
		private System.Nullable<int> _tipo;
		
		private EntitySet<VeiculoAtendimento> _VeiculoAtendimentos;
		
		private EntitySet<Ocorrencia> _Ocorrencias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncpfChanging(string value);
    partial void OncpfChanged();
    partial void OnsenhaChanging(string value);
    partial void OnsenhaChanged();
    partial void OntipoChanging(System.Nullable<int> value);
    partial void OntipoChanged();
    #endregion
		
		public Usuario()
		{
			this._VeiculoAtendimentos = new EntitySet<VeiculoAtendimento>(new Action<VeiculoAtendimento>(this.attach_VeiculoAtendimentos), new Action<VeiculoAtendimento>(this.detach_VeiculoAtendimentos));
			this._Ocorrencias = new EntitySet<Ocorrencia>(new Action<Ocorrencia>(this.attach_Ocorrencias), new Action<Ocorrencia>(this.detach_Ocorrencias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(MAX)")]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpf", DbType="VarChar(MAX)")]
		public string cpf
		{
			get
			{
				return this._cpf;
			}
			set
			{
				if ((this._cpf != value))
				{
					this.OncpfChanging(value);
					this.SendPropertyChanging();
					this._cpf = value;
					this.SendPropertyChanged("cpf");
					this.OncpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_senha", DbType="VarChar(MAX)")]
		public string senha
		{
			get
			{
				return this._senha;
			}
			set
			{
				if ((this._senha != value))
				{
					this.OnsenhaChanging(value);
					this.SendPropertyChanging();
					this._senha = value;
					this.SendPropertyChanged("senha");
					this.OnsenhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="Int")]
		public System.Nullable<int> tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_VeiculoAtendimento", Storage="_VeiculoAtendimentos", ThisKey="id", OtherKey="Usuario_id")]
		internal EntitySet<VeiculoAtendimento> VeiculoAtendimentos
		{
			get
			{
				return this._VeiculoAtendimentos;
			}
			set
			{
				this._VeiculoAtendimentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Ocorrencia", Storage="_Ocorrencias", ThisKey="id", OtherKey="usuario_id")]
		internal EntitySet<Ocorrencia> Ocorrencias
		{
			get
			{
				return this._Ocorrencias;
			}
			set
			{
				this._Ocorrencias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VeiculoAtendimentos(VeiculoAtendimento entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_VeiculoAtendimentos(VeiculoAtendimento entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Ocorrencias(Ocorrencia entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Ocorrencias(Ocorrencia entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chamado")]
	public partial class Chamado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _Ocorrencia_id;
		
		private System.Nullable<int> _VeiculoAtendimento_id;
		
		private System.Nullable<int> _Hospital_id;
		
		private string _trajetoOcorrencia;
		
		private string _trajetoHospital;
		
		private System.Nullable<System.DateTime> _data;
		
		private EntityRef<Hospital> _Hospital;
		
		private EntityRef<VeiculoAtendimento> _VeiculoAtendimento;
		
		private EntityRef<Ocorrencia> _Ocorrencia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnOcorrencia_idChanging(System.Nullable<int> value);
    partial void OnOcorrencia_idChanged();
    partial void OnVeiculoAtendimento_idChanging(System.Nullable<int> value);
    partial void OnVeiculoAtendimento_idChanged();
    partial void OnHospital_idChanging(System.Nullable<int> value);
    partial void OnHospital_idChanged();
    partial void OntrajetoOcorrenciaChanging(string value);
    partial void OntrajetoOcorrenciaChanged();
    partial void OntrajetoHospitalChanging(string value);
    partial void OntrajetoHospitalChanged();
    partial void OndataChanging(System.Nullable<System.DateTime> value);
    partial void OndataChanged();
    #endregion
		
		public Chamado()
		{
			this._Hospital = default(EntityRef<Hospital>);
			this._VeiculoAtendimento = default(EntityRef<VeiculoAtendimento>);
			this._Ocorrencia = default(EntityRef<Ocorrencia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ocorrencia_id", DbType="Int")]
		public System.Nullable<int> Ocorrencia_id
		{
			get
			{
				return this._Ocorrencia_id;
			}
			set
			{
				if ((this._Ocorrencia_id != value))
				{
					if (this._Ocorrencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOcorrencia_idChanging(value);
					this.SendPropertyChanging();
					this._Ocorrencia_id = value;
					this.SendPropertyChanged("Ocorrencia_id");
					this.OnOcorrencia_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VeiculoAtendimento_id", DbType="Int")]
		public System.Nullable<int> VeiculoAtendimento_id
		{
			get
			{
				return this._VeiculoAtendimento_id;
			}
			set
			{
				if ((this._VeiculoAtendimento_id != value))
				{
					if (this._VeiculoAtendimento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeiculoAtendimento_idChanging(value);
					this.SendPropertyChanging();
					this._VeiculoAtendimento_id = value;
					this.SendPropertyChanged("VeiculoAtendimento_id");
					this.OnVeiculoAtendimento_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hospital_id", DbType="Int")]
		public System.Nullable<int> Hospital_id
		{
			get
			{
				return this._Hospital_id;
			}
			set
			{
				if ((this._Hospital_id != value))
				{
					if (this._Hospital.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHospital_idChanging(value);
					this.SendPropertyChanging();
					this._Hospital_id = value;
					this.SendPropertyChanged("Hospital_id");
					this.OnHospital_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trajetoOcorrencia", DbType="VarChar(MAX)")]
		public string trajetoOcorrencia
		{
			get
			{
				return this._trajetoOcorrencia;
			}
			set
			{
				if ((this._trajetoOcorrencia != value))
				{
					this.OntrajetoOcorrenciaChanging(value);
					this.SendPropertyChanging();
					this._trajetoOcorrencia = value;
					this.SendPropertyChanged("trajetoOcorrencia");
					this.OntrajetoOcorrenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trajetoHospital", DbType="VarChar(MAX)")]
		public string trajetoHospital
		{
			get
			{
				return this._trajetoHospital;
			}
			set
			{
				if ((this._trajetoHospital != value))
				{
					this.OntrajetoHospitalChanging(value);
					this.SendPropertyChanging();
					this._trajetoHospital = value;
					this.SendPropertyChanged("trajetoHospital");
					this.OntrajetoHospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime")]
		public System.Nullable<System.DateTime> data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hospital_Chamado", Storage="_Hospital", ThisKey="Hospital_id", OtherKey="id", IsForeignKey=true)]
		internal Hospital Hospital
		{
			get
			{
				return this._Hospital.Entity;
			}
			set
			{
				Hospital previousValue = this._Hospital.Entity;
				if (((previousValue != value) 
							|| (this._Hospital.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hospital.Entity = null;
						previousValue.Chamados.Remove(this);
					}
					this._Hospital.Entity = value;
					if ((value != null))
					{
						value.Chamados.Add(this);
						this._Hospital_id = value.id;
					}
					else
					{
						this._Hospital_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hospital");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeiculoAtendimento_Chamado", Storage="_VeiculoAtendimento", ThisKey="VeiculoAtendimento_id", OtherKey="id", IsForeignKey=true)]
		internal VeiculoAtendimento VeiculoAtendimento
		{
			get
			{
				return this._VeiculoAtendimento.Entity;
			}
			set
			{
				VeiculoAtendimento previousValue = this._VeiculoAtendimento.Entity;
				if (((previousValue != value) 
							|| (this._VeiculoAtendimento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VeiculoAtendimento.Entity = null;
						previousValue.Chamados.Remove(this);
					}
					this._VeiculoAtendimento.Entity = value;
					if ((value != null))
					{
						value.Chamados.Add(this);
						this._VeiculoAtendimento_id = value.id;
					}
					else
					{
						this._VeiculoAtendimento_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("VeiculoAtendimento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ocorrencia_Chamado", Storage="_Ocorrencia", ThisKey="Ocorrencia_id", OtherKey="id", IsForeignKey=true)]
		internal Ocorrencia Ocorrencia
		{
			get
			{
				return this._Ocorrencia.Entity;
			}
			set
			{
				Ocorrencia previousValue = this._Ocorrencia.Entity;
				if (((previousValue != value) 
							|| (this._Ocorrencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ocorrencia.Entity = null;
						previousValue.Chamados.Remove(this);
					}
					this._Ocorrencia.Entity = value;
					if ((value != null))
					{
						value.Chamados.Add(this);
						this._Ocorrencia_id = value.id;
					}
					else
					{
						this._Ocorrencia_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ocorrencia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ocorrencia")]
	public partial class Ocorrencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _usuario_id;
		
		private string _tipo;
		
		private string _nomeSolicitante;
		
		private string _nomeVitima;
		
		private System.Nullable<int> _quantidadeVitimas;
		
		private string _endereco;
		
		private string _cep;
		
		private string _informacaoAdicional;
		
		private string _situacao;
		
		private System.Nullable<System.DateTime> _data;
		
		private EntitySet<Chamado> _Chamados;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onusuario_idChanging(System.Nullable<int> value);
    partial void Onusuario_idChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    partial void OnnomeSolicitanteChanging(string value);
    partial void OnnomeSolicitanteChanged();
    partial void OnnomeVitimaChanging(string value);
    partial void OnnomeVitimaChanged();
    partial void OnquantidadeVitimasChanging(System.Nullable<int> value);
    partial void OnquantidadeVitimasChanged();
    partial void OnenderecoChanging(string value);
    partial void OnenderecoChanged();
    partial void OncepChanging(string value);
    partial void OncepChanged();
    partial void OninformacaoAdicionalChanging(string value);
    partial void OninformacaoAdicionalChanged();
    partial void OnsituacaoChanging(string value);
    partial void OnsituacaoChanged();
    partial void OndataChanging(System.Nullable<System.DateTime> value);
    partial void OndataChanged();
    #endregion
		
		public Ocorrencia()
		{
			this._Chamados = new EntitySet<Chamado>(new Action<Chamado>(this.attach_Chamados), new Action<Chamado>(this.detach_Chamados));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario_id", DbType="Int")]
		public System.Nullable<int> usuario_id
		{
			get
			{
				return this._usuario_id;
			}
			set
			{
				if ((this._usuario_id != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusuario_idChanging(value);
					this.SendPropertyChanging();
					this._usuario_id = value;
					this.SendPropertyChanged("usuario_id");
					this.Onusuario_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(MAX)")]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSolicitante", DbType="VarChar(MAX)")]
		public string nomeSolicitante
		{
			get
			{
				return this._nomeSolicitante;
			}
			set
			{
				if ((this._nomeSolicitante != value))
				{
					this.OnnomeSolicitanteChanging(value);
					this.SendPropertyChanging();
					this._nomeSolicitante = value;
					this.SendPropertyChanged("nomeSolicitante");
					this.OnnomeSolicitanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeVitima", DbType="VarChar(MAX)")]
		public string nomeVitima
		{
			get
			{
				return this._nomeVitima;
			}
			set
			{
				if ((this._nomeVitima != value))
				{
					this.OnnomeVitimaChanging(value);
					this.SendPropertyChanging();
					this._nomeVitima = value;
					this.SendPropertyChanged("nomeVitima");
					this.OnnomeVitimaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantidadeVitimas", DbType="Int")]
		public System.Nullable<int> quantidadeVitimas
		{
			get
			{
				return this._quantidadeVitimas;
			}
			set
			{
				if ((this._quantidadeVitimas != value))
				{
					this.OnquantidadeVitimasChanging(value);
					this.SendPropertyChanging();
					this._quantidadeVitimas = value;
					this.SendPropertyChanged("quantidadeVitimas");
					this.OnquantidadeVitimasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endereco", DbType="VarChar(MAX)")]
		public string endereco
		{
			get
			{
				return this._endereco;
			}
			set
			{
				if ((this._endereco != value))
				{
					this.OnenderecoChanging(value);
					this.SendPropertyChanging();
					this._endereco = value;
					this.SendPropertyChanged("endereco");
					this.OnenderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cep", DbType="VarChar(MAX)")]
		public string cep
		{
			get
			{
				return this._cep;
			}
			set
			{
				if ((this._cep != value))
				{
					this.OncepChanging(value);
					this.SendPropertyChanging();
					this._cep = value;
					this.SendPropertyChanged("cep");
					this.OncepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_informacaoAdicional", DbType="VarChar(MAX)")]
		public string informacaoAdicional
		{
			get
			{
				return this._informacaoAdicional;
			}
			set
			{
				if ((this._informacaoAdicional != value))
				{
					this.OninformacaoAdicionalChanging(value);
					this.SendPropertyChanging();
					this._informacaoAdicional = value;
					this.SendPropertyChanged("informacaoAdicional");
					this.OninformacaoAdicionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_situacao", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string situacao
		{
			get
			{
				return this._situacao;
			}
			set
			{
				if ((this._situacao != value))
				{
					this.OnsituacaoChanging(value);
					this.SendPropertyChanging();
					this._situacao = value;
					this.SendPropertyChanged("situacao");
					this.OnsituacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime")]
		public System.Nullable<System.DateTime> data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ocorrencia_Chamado", Storage="_Chamados", ThisKey="id", OtherKey="Ocorrencia_id")]
		internal EntitySet<Chamado> Chamados
		{
			get
			{
				return this._Chamados;
			}
			set
			{
				this._Chamados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Ocorrencia", Storage="_Usuario", ThisKey="usuario_id", OtherKey="id", IsForeignKey=true)]
		internal Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Ocorrencias.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Ocorrencias.Add(this);
						this._usuario_id = value.id;
					}
					else
					{
						this._usuario_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chamados(Chamado entity)
		{
			this.SendPropertyChanging();
			entity.Ocorrencia = this;
		}
		
		private void detach_Chamados(Chamado entity)
		{
			this.SendPropertyChanging();
			entity.Ocorrencia = null;
		}
	}
}
#pragma warning restore 1591
